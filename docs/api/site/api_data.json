[  {    "type": "get",    "url": "/hierarchy/",    "title": "Get all hierarchy namespaces",    "name": "allHierarchies",    "group": "Hierarchy",    "description": "<p>Get all hierarchy namespace objects.</p>",    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n[{\n   \"_id\":\"ellipsis\",\n   \"websites\": [ \"the-river-city-news\", \"the-mountain-village-gazette\" ]\n},{\n   \"_id\":\"default\",\n   \"websites\": [ \"*\" ]\n}]",          "type": "json"        }      ]    },    "version": "3.0.0",    "filename": "routes/api-v3-hierarchy.js",    "groupTitle": "Hierarchy"  },  {    "type": "delete",    "url": "/hierarchy/:_id",    "title": "Delete a hierarchy namespace",    "name": "deleteHierarchy",    "group": "Hierarchy",    "description": "<p>Delete a hierarchy namespace object. Note that &quot;default&quot; cannot be deleted.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Hierarchy unique identifier.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 204 OK\n{\"ok\":true, \"reason\": \"Delete Successful\"}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{ \"errors\": [\"No document was found matching the id foo\"] }",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\"errors\":[\"Cannot delete hierarchy. The following sections are included in this hierarchy: [\\\"/foo\\\", \\\"/foo/bar\\\"]\"]}",          "type": "json"        }      ]    },    "version": "3.0.0",    "filename": "routes/api-v3-hierarchy.js",    "groupTitle": "Hierarchy"  },  {    "type": "get",    "url": "/hierarchy/:_id",    "title": "Get a hierarchy namespace",    "name": "getHierarchy",    "group": "Hierarchy",    "description": "<p>Get a hierarchy namespace object. Hierarchies are used to identify sets of relationships between sections (E.g. for creating navigation trees.) Note that the actual relationships are stored within the section object.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Hierarchy unique identifier.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   \"_id\":\"ellipsis\",\n   \"websites\": [ \"the-river-city-news\", \"the-mountain-village-gazette\" ]\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Bad Request\n{ \"errors\": [\"No document was found matching the id foo\"] }",          "type": "json"        }      ]    },    "version": "3.0.0",    "filename": "routes/api-v3-hierarchy.js",    "groupTitle": "Hierarchy"  },  {    "type": "put",    "url": "/hierarchy/:_id",    "title": "Update or create a hierarchy namespace",    "name": "setHierarchy",    "group": "Hierarchy",    "description": "<p>Update or create a hierarchy namespace object. Hierarchies are used to identify sets of relationships between sections (E.g. for creating navigation trees.) Note that the actual relationships are stored within the section object.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Hierarchy unique identifier. Should contain only alphanumeric characters and hyphens, and underscores.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "websites",            "description": "<p>A list of websites that have a hierarchy with this name.  Add &quot;*&quot; to the list to indicate that this hierarchy should exist for all websites.</p>"          }        ]      },      "examples": [        {          "title": "Example-Request:",          "content": "{\n  \"_id\":\"ellipsis\",\n  \"websites\": [ \"the-river-city-news\", \"the-mountain-village-gazette\" ]\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   \"_id\":\"ellipsis\",\n   \"websites\": [ \"the-river-city-news\", \"the-mountain-village-gazette\" ]\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{ \"errors\": [\"The id in the URL and the data being sent do not match.\"] }",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{ \"errors\": [\"Cannot create a hierarchy for websites that do not exist: [\\\"foo\\\"]\"] }",          "type": "json"        }      ]    },    "version": "3.0.0",    "filename": "routes/api-v3-hierarchy.js",    "groupTitle": "Hierarchy"  },  {    "type": "post",    "url": "/website/:_website/link",    "title": "create a link",    "name": "addLink",    "group": "Links",    "description": "<p>Create a link object. Same as PUT endpoint, but generates an _id on-demand.  A maximum of 1000 links can exist within a single website.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_website",            "description": "<p>The _id of the website this section is in. <em>Required.</em></p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "url",            "description": "<p>The destination url of this link.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "display_name",            "description": "<p>The text to display when rendering this link.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "parent",            "description": "<p>A map indicating this section's parent section in each hierarchy. E.g., for the section &quot;/world/america/new-york&quot;, the parent_id might be &quot;/world&quot; in one section and &quot;/world/america&quot; in another. <em>Required.</em></p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "order",            "description": "<p>A map indicating the section's order relative to its siblings in each hierarchy. <em>Required</em></p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n  \"_website\": \"the-river-city-news\",\n  \"display_name\": \"Buy Sports Tickets!\",\n  \"url\": \"http://buysportstickets.com\",\n  \"order\": {\n      \"default\": 100,\n      \"ellipsis\": 100\n  },\n  \"parent\": {\n    \"default\": \"/sports/events\",\n    \"ellipsis\": \"/sports\"\n  }\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "  HTTP/1.1 200 OK\n{\n  \"_id\": \"link-ABCDEFGHIJKLMNOPQRSTUBWXYZ\",\n  \"_website\": \"the-river-city-news\",\n  \"display_name\": \"Buy Sports Tickets!\",\n  \"url\": \"http://buysportstickets.com\",\n  \"order\": {\n      \"default\": 100,\n      \"ellipsis\": 100\n  },\n  \"parent\": {\n    \"default\": \"/sports/events\",\n    \"ellipsis\": \"/sports\"\n  }\n}",          "type": "json"        }      ]    },    "version": "3.0.0",    "filename": "routes/api-v3-link.js",    "groupTitle": "Links"  },  {    "type": "delete",    "url": "/website/:_website/link/:_id",    "title": "Delete a link",    "name": "deleteLinks",    "group": "Links",    "description": "<p>Delete a single link.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Link unique identifier.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_website",            "description": "<p>Website unique identifier.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 204 OK\n{\"ok\": true, \"reason\": \"Delete Successful.\"}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{ \"errors\": [\"No document was found matching the id foo\"] }",          "type": "json"        }      ]    },    "version": "3.0.0",    "filename": "routes/api-v3-link.js",    "groupTitle": "Links"  },  {    "type": "get",    "url": "/website/:_website/link/",    "title": "Get all links",    "name": "getAllLinks",    "group": "Links",    "description": "<p>Get all links.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_website",            "description": "<p>The _id of the website this section is in. <em>Required.</em></p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "offset",            "description": "<p>Used for pagination. The number of the first section to return. (Defaults to <em>0</em>)</p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "limit",            "description": "<p>Used for pagination. The number of sections to return. (Defaults to <em>100</em>)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"q_results\": [\n    {\n      \"_id\": \"link-1\",\n      \"_website\": \"test\",\n      \"display_name\": \"Link 1\",\n      \"url\": \"http://sports.com\",\n      \"parent\": {\n        \"default\": \"/\"\n      },\n      \"order\": {\n        \"default\": 100\n      }\n    }\n  ],\n  \"count\": 1,\n  \"total_count\": 1,\n  \"limit\": 100,\n  \"offset\": 0\n}",          "type": "json"        }      ]    },    "version": "3.0.0",    "filename": "routes/api-v3-link.js",    "groupTitle": "Links"  },  {    "type": "get",    "url": "/website/:_website/link/:_id",    "title": "Get a link",    "name": "getLink",    "group": "Links",    "description": "<p>Get a link. A link is a single node in a navigation tree that links to an external url. E.g., &quot;http://store.rivercitynews.com&quot;</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Link unique identifier. Should contain only alphanumeric characters and hyphens, and underscores. Must begin with <code>link-</code>. <em>Required.</em></p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_website",            "description": "<p>The _id of the website this section is in. <em>Required.</em></p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"_id\": \"/local/dc/dc-politics\",\n  \"name\": \"D.C. Politics\",\n  \"order\": {\n      \"default\": 0,\n      \"ellipsis\": 0\n  },\n  \"parent\": {\n    \"default\": \"/local/dc\",\n    \"ellipsis\": \"/local\"\n  },\n  \"inactive\": false\n}",          "type": "json"        }      ]    },    "version": "3.0.0",    "filename": "routes/api-v3-link.js",    "groupTitle": "Links"  },  {    "type": "put",    "url": "/website/:_website/link/:_id",    "title": "Update or create a link",    "name": "setLink",    "group": "Links",    "description": "<p>Update or create a link object. A link represents an external location that can be added to a navigation menu. E.g., in a navigation hierarchy, under the section &quot;Sports&quot;, one might add a link to a separate website http://buysportstickets.com with the text &quot;Buy Sports Tickets!&quot; A link has <code>_id</code>, <code>_website</code>, <code>url</code>, <code>display_name</code>, <code>order</code> and <code>parent</code> fields <em>only</em>. The <code>order</code> and <code>parent</code> fields are identical in structure to those found in sections. All fields are required.</p> <p>A maximum of 1000 links can exist within a single website.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Link unique identifier. Should contain only alphanumeric characters and hyphens, and underscores. Must begin with <code>link-</code>. <em>Required.</em></p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_website",            "description": "<p>The _id of the website this section is in. <em>Required.</em></p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "url",            "description": "<p>The destination url of this link.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "display_name",            "description": "<p>The text to display when rendering this link.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "parent",            "description": "<p>A map indicating this section's parent section in each hierarchy. E.g., for the section &quot;/world/america/new-york&quot;, the parent_id might be &quot;/world&quot; in one section and &quot;/world/america&quot; in another. <em>Required.</em></p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "order",            "description": "<p>A map indicating the section's order relative to its siblings in each hierarchy. <em>Required</em></p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n  \"_id\": \"link-ABCDEFGHIJKLMNOPQRSTUBWXYZ\",\n  \"_website\": \"the-river-city-news\",\n  \"display_name\": \"Buy Sports Tickets!\",\n  \"url\": \"http://buysportstickets.com\",\n  \"order\": {\n      \"default\": 100,\n      \"ellipsis\": 100\n  },\n  \"parent\": {\n    \"default\": \"/sports/events\",\n    \"ellipsis\": \"/sports\"\n  }\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "  HTTP/1.1 200 OK\n{\n  \"_id\": \"link-ABCDEFGHIJKLMNOPQRSTUBWXYZ\",\n  \"_website\": \"the-river-city-news\",\n  \"display_name\": \"Buy Sports Tickets!\",\n  \"url\": \"http://buysportstickets.com\",\n  \"order\": {\n      \"default\": 100,\n      \"ellipsis\": 100\n  },\n  \"parent\": {\n    \"default\": \"/sports/events\",\n    \"ellipsis\": \"/sports\"\n  }\n}",          "type": "json"        }      ]    },    "version": "3.0.0",    "filename": "routes/api-v3-link.js",    "groupTitle": "Links"  },  {    "type": "get",    "url": "/navigation/:_website/",    "title": "Get navigation tree",    "name": "GetNavigation",    "group": "Navigation",    "description": "<p>Get the navigation tree for a particular website.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_website",            "description": "<p>The id of the website whose navigation tree is to be retrieved. <em>Required.</em></p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>The id of the section that will be the root of the navigation tree. (Defaults to <em>/</em>)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "hierarchy",            "description": "<p>Specifies which hierarchy to use. (Defaults to <em>default</em>)</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "no_empty_string",            "description": "<p>If <em>true</em>, all field values that are an empty string will be converted to <em>null</em>. (Defaults to <em>false</em>)</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "fallback_default",            "description": "<p>If true, and specified hierarchy value is not found, returns default hierarchy. (Defaults to <em>false</em>)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{ _id: '/',\n    children:\n      [ { _id: '/news',\n          _website: 'The Washington Post',\n          privilege: 'News',\n          name: 'News',\n          order: {\n            \"default\": 1002\n          },\n          ancestors: {\n            \"default\": [\"/\"]\n          },\n          inactive: false\n          children: [ { _id: '/news/sports'\n                        _website: 'The Washington Post',\n                        privilege: 'News',\n                        name: 'News',\n                        order: {\n                          \"default\": 2001\n                        },\n                        ancestors: {\n                          \"default\": [\"/news\"]\n                        },\n                        parent: {\n                          \"default\": \"/news\"\n                        },\n                        inactive: false } ] } ] }",          "type": "json"        }      ]    },    "version": "3.0.0",    "filename": "routes/api-v3-navigation.js",    "groupTitle": "Navigation"  },  {    "type": "get",    "url": "/website/:_website/section/",    "title": "Get all sections",    "name": "allSections",    "group": "Section",    "description": "<p>Get all sections.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_website",            "description": "<p>The _id of the website this section is in. <em>Required.</em></p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "ids",            "description": "<p>If present, return only the sections with an <code>_id</code> or <code>_admin.alias_id</code> value specified by this parameter. Specify multiple values for this parameter by repeating in the query string. E.g. <code>?ids=/sports&amp;ids=/politics/national&amp;ids=/politics/world</code></p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "no_empty_string",            "description": "<p>If <em>true</em>, all field values that are an empty string will be converted to <em>null</em>. (Defaults to <em>false</em>)</p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "offset",            "description": "<p>Used for pagination. The number of the first section to return. (Defaults to <em>0</em>)</p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "limit",            "description": "<p>Used for pagination. The number of sections to return. (Defaults to <em>100</em>)</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "ans",            "description": "<p>If <em>true</em>, the section object will be converted to the ANS version specified in version specified below.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "ans_version",            "description": "<p>The ANS version to return convert the section objects as. Defaults to '0.5.8'. Supported values are:</p> <ul> <li><em>0.5.8</em> -- will return sections in the 0.5.8 'site' format: <a href=\"https://github.com/washingtonpost/ans-schema/blob/master/src/main/resources/schema/ans/0.5.8/utils/site.json\">site.json</a></li> <li><em>0.6.0</em> -- will return sections in the 0.6.0 'section' format: <a href=\"https://github.com/washingtonpost/ans-schema/blob/master/src/main/resources/schema/ans/0.6.0/utils/section.json\">section.json</a></li> </ul>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Query by ids:",          "content": "GET /api/v3/website/washpost/section/?ids=/local/dc/dc-politics&ids=/politics/national\n\nHTTP/1.1 200 OK\n  {\n    \"count\": 2,\n    \"total_count\": 2,\n    \"limit\": 100,\n    \"offset\": 0,\n    \"q_results\": [{\n      \"_id\": \"/national/politics\",\n      \"_website\": \"washpost\",\n      \"name\": \"National Politics\",\n      \"order\": {\n          \"default\": 0,\n          \"ellipsis\": 0\n      },\n      \"parent\": {\n        \"default\": \"/national\",\n        \"ellipsis\": \"/national\"\n      },\n      \"_admin\": {\n        \"alias_ids\": [ \"/politics/national\" ]\n      },\n      \"inactive\": false\n    }, {\n      \"_id\": \"/local/dc/dc-politics\",\n      \"_website\": \"washpost\",\n      \"name\": \"D.C. Politics\",\n      \"order\": {\n          \"default\": 0,\n          \"ellipsis\": 0\n      },\n      \"parent\": {\n        \"default\": \"/local/dc\",\n        \"ellipsis\": \"/local\"\n      },\n      \"inactive\": false\n    }]\n  }",          "type": "json"        },        {          "title": "All sections paginated by 5:",          "content": "GET /api/v3/website/washpost/section/?limit=5&offset=0\n\nHTTP/1.1 200 OK\n  {\n    \"count\": 5,\n    \"total_count\": 100,\n    \"limit\": 5,\n    \"offset\": 0,\n    \"q_results\": [{\n      \"_id\": \"/national/\",\n      \"_website\": \"washpost\",\n      \"name\": \"National\",\n      \"order\": {\n          \"default\": 0,\n          \"ellipsis\": 0\n      },\n      \"parent\": {\n        \"default\": \"/\",\n        \"ellipsis\": 0,\n      },\n      \"inactive\": false\n    }, {\n      \"_id\": \"/national/politics\",\n      \"_website\": \"washpost\",\n      \"name\": \"National Politics\",\n      \"order\": {\n          \"default\": 0,\n          \"ellipsis\": 0\n      },\n      \"parent\": {\n        \"default\": \"/national\",\n        \"ellipsis\": \"/national\"\n      },\n      \"_admin\": {\n        \"alias_ids\": [ \"/politics/national\" ]\n      },\n      \"inactive\": false\n    }, {\n      \"_id\": \"/local\",\n      \"_website\": \"washpost\",\n      \"name\": \"Local\",\n      \"order\": {\n          \"default\": 10,\n          \"ellipsis\": 10\n      },\n      \"parent\": {\n        \"default\": \"/\",\n        \"ellipsis\": \"/\"\n      },\n      \"inactive\": false\n    }, {\n      \"_id\": \"/local/dc\",\n      \"_website\": \"washpost\",\n      \"name\": \"D.C.\",\n      \"order\": {\n          \"default\": 0,\n      },\n      \"parent\": {\n        \"default\": \"/local\",\n      },\n      \"inactive\": false\n    }, {\n      \"_id\": \"/local/dc/dc-politics\",\n      \"_website\": \"washpost\",\n      \"name\": \"D.C. Politics\",\n      \"order\": {\n          \"default\": 0,\n          \"ellipsis\": 0\n      },\n      \"parent\": {\n        \"default\": \"/local/dc\",\n        \"ellipsis\": \"/local\"\n      },\n      \"inactive\": false\n    }]\n  }",          "type": "json"        }      ]    },    "version": "3.0.0",    "filename": "routes/api-v3-section.js",    "groupTitle": "Section"  },  {    "type": "delete",    "url": "/website/:_website/section/?_id=:_id",    "title": "Delete a section",    "name": "deleteSection",    "group": "Section",    "description": "<p>Delete a single section.</p> <p>Note that two usages are allowed:</p> <p><code>GET /website/:_website/section/:_id</code></p> <p><code>GET /website/:_website/section/?_id=:_id</code></p> <p>The latter is supported due to issues with proxy servers decoding url parameters or collapsing adjacent slashes too aggressively.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Section unique identifier.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_website",            "description": "<p>Website unique identifier.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 204 OK\n{\"ok\": true, \"reason\": \"Delete Successful.\"}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{ \"errors\": [\"No document was found matching the id foo\"] }",          "type": "json"        }      ]    },    "version": "3.0.0",    "filename": "routes/api-v3-section.js",    "groupTitle": "Section"  },  {    "type": "get",    "url": "/website/:_website/section/?_id=:_id",    "title": "Get a section",    "name": "getSection",    "group": "Section",    "description": "<p>Get a section. Sections are a single taxonomical node with arbitrary metadata. E.g., &quot;Sports&quot; or &quot;Politics.&quot; (In previous versions of this API, sections were called &quot;sites.&quot; This term has been deprecated.)</p> <p>Note that two usages are allowed:</p> <p><code>GET /website/:_website/section/:_id</code></p> <p><code>GET /website/:_website/section/?_id=:_id</code></p> <p>The latter is supported due to issues with proxy servers decoding url parameters or collapsing adjacent slashes too aggressively.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Section unique identifier. Should contain only alphanumeric characters and hyphens, and underscores. <em>Allowed as either query parameter of url parameter.</em> <em>Required.</em></p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_website",            "description": "<p>The _id of the website this section is in. <em>Required.</em></p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"_id\": \"/local/dc/dc-politics\",\n  \"_website\": \"washpost\",\n  \"name\": \"D.C. Politics\",\n  \"order\": {\n      \"default\": 0,\n      \"ellipsis\": 0\n  },\n  \"parent\": {\n    \"default\": \"/local/dc\",\n    \"ellipsis\": \"/local\"\n  },\n  \"inactive\": false\n}",          "type": "json"        }      ]    },    "version": "3.0.0",    "filename": "routes/api-v3-section.js",    "groupTitle": "Section"  },  {    "type": "put",    "url": "/website/:_website/section/?_id=:_id",    "title": "Update or create a section",    "name": "setSection",    "group": "Section",    "description": "<p>Update or create a section object. Sections are a single taxonomical node with arbitrary metadata. E.g., &quot;Sports&quot; or &quot;Politics.&quot; (In previous versions of this API, sections were called &quot;sites.&quot; This term has been deprecated.)  Note that in addition to the parameters specified here, any additional fields may be added by the user.</p> <p>A maximum of 5000 sections can exist within a single website.</p> <p>Note that two usages are allowed:</p> <p><code>PUT /website/:_website/section/:_id</code></p> <p><code>PUT /website/:_website/section/?_id=:_id</code></p> <p>The latter is supported due to issues with proxy servers decoding url parameters or collapsing adjacent slashes too aggressively.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Section unique identifier. Should contain only alphanumeric characters and hyphens, and underscores. <em>Required.</em></p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_website",            "description": "<p>The _id of the website this section is in. <em>Required.</em></p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "parent",            "description": "<p>A map indicating this section's parent section in each hierarchy. E.g., for the section &quot;/world/america/new-york&quot;, the parent_id might be &quot;/world&quot; in one section and &quot;/world/america&quot; in another.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "order",            "description": "<p>A map indicating the section's order relative to its siblings in each hierarchy.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "inactive",            "description": "<p>Whether or not this section should be hidden from the Site Service UI and most API responses.</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n  \"_id\": \"/local/dc/dc-politics\",\n  \"_website\": \"washpost\",\n  \"name\": \"D.C. Politics\",\n  \"order\": {\n      \"default\": 0,\n      \"ellipsis\": 0\n  },\n  \"parent\": {\n    \"default\": \"/local/dc\",\n    \"ellipsis\": \"/local\"\n  },\n  \"inactive\": false\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "  HTTP/1.1 200 OK\n{\n  \"_id\": \"/local/dc/dc-politics\",\n  \"_website\": \"washpost\",\n  \"name\": \"D.C. Politics\",\n  \"order\": {\n      \"default\": 0,\n      \"ellipsis\": 0\n  },\n  \"parent\": {\n    \"default\": \"/local/dc\",\n    \"ellipsis\": \"/local\"\n  },\n  \"inactive\": false\n}",          "type": "json"        }      ]    },    "version": "3.0.0",    "filename": "routes/api-v3-section.js",    "groupTitle": "Section"  },  {    "type": "get",    "url": "/website/",    "title": "Get all websites",    "name": "allWebsites",    "group": "Website",    "description": "<p>Retrieve all websites.</p>",    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n[{\n   \"_id\":\"the-river-city-times\",\n   \"display_name\": \"The River City Times\",\n   \"base_path\": \"http://therivercitytimes.com\",\n   \"domains\":[\"therivercitytimes.com\", \"rivercitytimes.net\"],\n   \"is_default_website\": false\n}, {\n   \"_id\":\"the-mountain-village-gazette\",\n   \"display_name\": \"The Mountain Village Gazette\",\n   \"base_path\": \"http://themountainvillagegazette.com\",\n   \"domains\":[\"mountainvillagegazette.net\"],\n   \"is_default_website\": false\n}]",          "type": "json"        }      ]    },    "version": "3.0.0",    "filename": "routes/api-v3-website.js",    "groupTitle": "Website"  },  {    "type": "delete",    "url": "/website/:_id",    "title": "Delete a website",    "name": "deleteWebsite",    "group": "Website",    "description": "<p>Delete a single website.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Website unique identifier.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 204 OK\n{\"ok\": true, \"reason\": \"Delete Successful.\"}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{ \"errors\": [\"No document was found matching the id foo\"] }",          "type": "json"        }      ]    },    "version": "3.0.0",    "filename": "routes/api-v3-website.js",    "groupTitle": "Website"  },  {    "type": "get",    "url": "/website/:_id",    "title": "Get a website",    "name": "getWebsite",    "group": "Website",    "description": "<p>Retrieve a single website. Websites are used to separate content and rendering tiers within a single organization.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Website unique identifier.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   \"_id\":\"the-river-city-times\",\n   \"display_name\": \"The River City Times\",\n   \"base_path\": \"http://therivercitytimes.com\",\n   \"domains\":[\"therivercitytimes.com\", \"rivercitytimes.net\"],\n   \"is_default_website\": false\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{ \"errors\": [\"No document was found matching the id foo\"] }",          "type": "json"        }      ]    },    "version": "3.0.0",    "filename": "routes/api-v3-website.js",    "groupTitle": "Website"  },  {    "type": "get",    "url": "/website/:_id/hierarchies",    "title": "Get a list of all hierarchies that belong to a website",    "name": "getWebsiteHierarchies",    "group": "Website",    "description": "<p>Retrieve a list of all hierarchies that belong to a particular website. Note that single heirarchy can belong to one or more websites.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Website unique identifier.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n[\n  {\n    \"_id\":\"hierarchy1\",\n    \"websites\": [ \"the-river-city-news\", \"the-mountain-village-gazette\" ]\n  }\n]",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{ \"errors\": [\"No document was found matching the id foo\"] }",          "type": "json"        }      ]    },    "version": "3.0.0",    "filename": "routes/api-v3-website.js",    "groupTitle": "Website"  },  {    "type": "put",    "url": "/website/:_id",    "title": "Update or create a website",    "name": "setWebsite",    "group": "Website",    "description": "<p>Update or create a website object. Websites are used to separate content and rendering tiers within a single organization.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Website unique identifier. Should contain only alphanumeric characters and hyphens, and underscores.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "display_name",            "description": "<p>The human-readable display name of the website.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "base_path",            "description": "<p>The base path of this website. Used to generate preview URLs.</p>"          },          {            "group": "Parameter",            "type": "String[]",            "optional": false,            "field": "domains",            "description": "<p>Any and all domains associated with this website. Used to generate origin and CDN configuration.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "is_default_website",            "description": "<p>Whether or not this website is considered the <em>default</em> website. Only one <em>default</em> website may exist within a single organization. If true, all calls to v1 and v2 API endpoints will be made against this website. NOTE: Once set, this cannot be unset and the website cannot be deleted.</p> <p>A maximum of 100 websites can exist within a single organization.</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n   \"_id\":\"the-river-city-times\",\n   \"display_name\": \"The River City Times\",\n   \"base_path\": \"http://therivercitytimes.com\",\n   \"domains\":[\"therivercitytimes.com\", \"rivercitytimes.net\"],\n   \"is_default_website\": false\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   \"_id\":\"the-river-city-times\",\n   \"display_name\": \"The River City Times\",\n   \"base_path\": \"http://therivercitytimes.com\",\n   \"domains\":[\"therivercitytimes.com\", \"rivercitytimes.net\"],\n   \"is_default_website\": false\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{ \"errors\": [\"The id in the URL and the data being sent do not match.\"] }",          "type": "json"        }      ]    },    "version": "3.0.0",    "filename": "routes/api-v3-website.js",    "groupTitle": "Website"  }]
